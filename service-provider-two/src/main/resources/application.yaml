server:
  port: 8212

spring:
  application:
    name: service-provider-two  #service-provider-one nacos将服务服务注册中心，默认采用应用程序名称。如果两个服务名称一样，网关会采用负载均衡。默认轮训
  cloud:
    nacos:
      discovery:
        server-addr: 127.0.0.1:8848
#        metadata:  #以下是springbootadmin的配置
#          management:
#            context-path: '${server.servlet.context-path}/actuator'
  datasource:
    #mysql
    #具体参见类DynamicDataSourceAspect 说明
    #不用此默认，默认就是写库,多数据源用jdbcUrl，不是url,spring 默认用的是url，用多数据源用url会报错。
    url: jdbc:mysql://127.0.0.1:3306/demo?useUnicode=true&characterEncoding=utf8&useSSL=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC&allowMultiQueries=true&rewriteBatchedStatements=true
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: root
    password: 123456

    # HikariCP： springboot2.0 默认的连接池。https://github.com/brettwooldridge/HikariCP
    #HikariCP  高并发性能优。mysql 8h 空闲断开连接可用quartz 调度定期select 1  。
    #产生此问题DB工作就不繁忙，性能要求不高。可以用上面dbcp2的配置，采取空闲查询策略。
    #要引入mybatis
    type: com.zaxxer.hikari.HikariDataSource
    # Hikari will use the above plus the following to setup connection pooling
    hikari:
      minimum-idle: 5
      maximum-pool-size: 100
      auto-commit: true #OrderManagerService 代码异常，spring自动回滚，或者手动回滚。否则正常自动提交
      idle-timeout: 60000
      #pool-name: HikariCP-Demo
      max-lifetime: 1800000
      connection-timeout: 600000
      #connection-test-query: SELECT 1

#springboot 监控 Actuator
#management:
#  endpoints:
#    web:
#      exposure:
#        include: '*'

#配置日志  打印sql语句
mybatis-plus:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

logging:
  config: classpath:log4j2.xml